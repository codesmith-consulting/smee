#!/usr/bin/env sh

# helper functions for strings
lowercase() {
  local string="${1}"

  if [ -z "${string}" ] && [ ! -t 0 ]; then
      string=$(cat <&0)
  fi

  echo ${string} | sed -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'
}

kebabcase() {
  local string="${1}"

  if [ -z "${string}" ] && [ ! -t 0 ]; then
      string=$(cat <&0)
  fi

  echo ${string} | tr '_' '-'
}

snakecase() {
  local string="${1}"

  if [ -z "${string}" ] && [ ! -t 0 ]; then
      string=$(cat <&0)
  fi

  echo ${string} | tr '-' '_'
}

random() {
  echo $(LC_CTYPE=C LANG=C tr -dc A-Za-z0-9 < /dev/urandom | fold -w ${1:-16} | head -n 1)
}

# help
usage() {
  cat << EOF
Usage:
  smee new <project-name>
  smee gen migration <name>
  smee gen code <table>
  smee db <migrate|rollback|create|drop>

Examples:
  smee new foo
  smee new another-foo

  smee gen migration create-table-todo     # Creates a new migration file
  smee gen sql:migration create-table-todo # Creates a new sql migration file

  smee gen code todo                       # Creates a new clj file with handler functions in src/todo.clj

  smee db migrate                          # runs all migrations found in db/migrations
  smee db rollback                         # rolls back the latest migration
  smee db create                           # creates a new database
  smee db drop                             # drops an existing database
EOF
  exit 0
}

if [ "$1" = "" ]
then
  usage;
fi

# new <project name>
if [ "$1" = "new" ]
then
  if [ "$2" != "" ]
  then
    name=$(kebabcase $(lowercase "$2"))
    sanitized=$(snakecase $(lowercase "$2"))
    secret=$(random)
    echo Downloading a fresh copy of smee...
    mkdir $2
    curl -fsSkL https://github.com/codesmith-consulting/smee-template/archive/master.tar.gz > master.tar.gz
    tar xzf master.tar.gz -C $2 --strip-components 1
    rm master.tar.gz
    cd $2
    mv gitignore .gitignore
    for f in $(find . -type f) ; do
      if [ $(uname) = "Darwin" ] # Mac
      then
        sed -i '' "s/{{name}}/$name/g" $f
        sed -i '' "s/{{sanitized}}/$sanitized/g" $f
        sed -i '' "s/{{secret}}/$secret/g" $f
      elif [ $(uname) = "Linux" ]
      then
        sed -i "s/{{name}}/$name/g" $f
        sed -i "s/{{sanitized}}/$sanitized/g" $f
        sed -i "s/{{secret}}/$secret/g" $f
      fi
    done

    echo "Created a new smee project in directory $2"
  fi
else
  clj -m smee.generators $@
fi

exit 0
